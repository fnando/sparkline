var sparkline=function(t){var e={};function n(r){var a;return(e[r]||(a=e[r]={i:r,l:!1,exports:{}},t[r].call(a.exports,a,a.exports,n),a.l=!0,a)).exports}return n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var a in t)n.d(r,a,function(e){return t[e]}.bind(null,a));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=1)}([function(t,e,n){var r=n(2),a=n(3),i=n(4);t.exports=function(t){return r(t)||a(t)||i()}},function(t,e,n){"use strict";n.r(e),n.d(e,"sparkline",function(){return l});var r=n(0),a=n.n(r);function i(t,e,n,r){return parseFloat((e-r*e/(t||1)+n).toFixed(2))}function o(t){return t.value}function c(t,e){var n,r=document.createElementNS("http://www.w3.org/2000/svg",t);for(n in e)r.setAttribute(n,e[n]);return r}function l(t,e,n){var r,l,u,p,s,d,f,h,b,v,y,m,x,g,A,k,P,w,C,j,L,M,O,S,E,_,F,Z;r=t,a()(r.querySelectorAll("*")).forEach(function(t){return r.removeChild(t)}),e.length<=1||(n=n||{},"number"==typeof e[0]&&(e=e.map(function(t){return{value:t}})),l=n.onmousemove,u=n.onmouseout,p="interactive"in n?n.interactive:!!l,L="normalize"in n&&n.normalize,s=n.spotRadius||2,d=2*s,f=n.cursorWidth||2,h=parseFloat(t.attributes["stroke-width"].value),b=n.fetch||o,n=e.map(function(t){return b(t)}),v=parseFloat(t.attributes.width.value)-2*d,y=parseFloat(t.attributes.height.value),m=y-2*h-d,x=Math.max.apply(Math,a()(n)),g=Math.min.apply(Math,a()(n)),A=-1e3,k=n.length-1,P=v/k,w=[],M=n,Z=i(x,m,h+s,0),L&&(M=n.map(function(t){return(t-g)/(x-g)}),Z=i(1,m,h+s,(0-g)/(x-g))),n=i(C=L?1:x,m,h+s,M[0]),j="M".concat(d," ").concat(n),M.forEach(function(t,n){var r=n*P+d;t=i(C,m,h+s,t);w.push(Object.assign({},e[n],{index:n,x:r,y:t})),j+=" L ".concat(r," ").concat(t)}),L=c("path",{class:"sparkline--line",d:j,fill:"none"}),n=c("path",{class:"sparkline--fill sparkline--fill-pos",d:"".concat(j," V ").concat(y," L ").concat(d," ").concat(y," Z"),stroke:"none"}),M=c("path",{class:"sparkline--fill sparkline--fill-neg",d:"".concat(j," V 0 L ").concat(d," 0 Z"),stroke:"none"}),0<=x&&0<=g?t.appendChild(n):(x<=0&&g<=0||(O=c("defs"),E=c("clipPath",{id:"clipPathPos"}),S=c("path",{d:"M0 0 L ".concat(v," 0 L ").concat(v," ").concat(Z," L 0 ").concat(Z," Z")}),E.appendChild(S),O.appendChild(E),n.setAttribute("clip-path","url(#clipPathPos)"),S=c("clipPath",{id:"clipPathNeg"}),E=c("path",{d:"M0 ".concat(Z," L ").concat(v," ").concat(Z," L ").concat(v," ").concat(y," L 0 ").concat(y," Z")}),S.appendChild(E),O.appendChild(S),t.appendChild(O),n.setAttribute("clip-path","url(#clipPathPos)"),t.appendChild(n),M.setAttribute("clip-path","url(#clipPathNeg)")),t.appendChild(M)),t.appendChild(L),p&&(_=c("line",{class:"sparkline--cursor",x1:A,x2:A,y1:0,y2:y,"stroke-width":f}),F=c("circle",{class:"sparkline--spot",cx:A,cy:A,r:s}),t.appendChild(_),t.appendChild(F),Z=c("rect",{width:t.attributes.width.value,height:t.attributes.height.value,style:"fill: transparent; stroke: transparent",class:"sparkline--interaction-layer"}),t.appendChild(Z),Z.addEventListener("mouseout",function(t){_.setAttribute("x1",A),_.setAttribute("x2",A),F.setAttribute("cx",A),u&&u(t)}),Z.addEventListener("mousemove",function(t){var e=t.offsetX,n=(n=w.find(function(t){return t.x>=e}))||w[k],r=(n=!(r=w[w.indexOf(n)-1])||r.x+(n.x-r.x)/2<=e?n:r).x,a=n.y;F.setAttribute("cx",r),F.setAttribute("cy",a),_.setAttribute("x1",r),_.setAttribute("x2",r),l&&l(t,n)})))}e.default=l},function(t,e){t.exports=function(t){if(Array.isArray(t)){for(var e=0,n=new Array(t.length);e<t.length;e++)n[e]=t[e];return n}}},function(t,e){t.exports=function(t){if(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t))return Array.from(t)}},function(t,e){t.exports=function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}}]);
//# sourceMappingURL=sparkline.js.map